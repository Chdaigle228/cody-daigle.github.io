// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

//const { characterScript } = require("./helpers");

function flatten() {

}

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function loop() {

}

// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every() {

}

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(string) {
  let ltr = [];
  let rtl = [];
  for(let i = 0; i < string.length; i++){
    let scriptName = characterScript(string.charCodeAt(i));

    if(scriptName !== null){
      //determine if direction is ltr
      if(scriptName.direction === 'ltr'){
        ltr.push(scriptName);
      }else { //else it isnt
        rtl.push(scriptName);
      }
    }
  }  
  //determine if ltr length is greater than rtl
  if(ltr.length > rtl.length){
    return 'ltr';
  }else{
    return 'rtl';
  }
}

// function characterScript(code) {
//   for (let script of SCRIPTS) {
//     if (script.ranges.some(([from, to]) => {
//         return code >= from && code < to;
//       })) {
//       return script;
//     }
//   }
//   return null;
// }
// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
